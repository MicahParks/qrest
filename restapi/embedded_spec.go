// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    },
    "version": "0.0.1"
  },
  "host": "localhost",
  "basePath": "/api/v0",
  "paths": {
    "/alive": {
      "get": {
        "description": "Any non-200 response means the service is not alive.",
        "tags": [
          "system"
        ],
        "summary": "Used by Caddy or other reverse proxy to determine if the service is alive.",
        "operationId": "alive",
        "responses": {
          "200": {
            "description": "Service is alive."
          }
        }
      }
    },
    "/group/{group}": {
      "post": {
        "summary": "Insert a quota-group.",
        "operationId": "groupInsert",
        "parameters": [
          {
            "type": "string",
            "description": "The name of the group to insert.",
            "name": "group",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "The group was successfully inserted."
          },
          "default": {
            "description": "Unexpected error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a quota-group.",
        "operationId": "groupDelete",
        "parameters": [
          {
            "type": "string",
            "description": "The name of the group to delete.",
            "name": "group",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "The group was successfully deleted."
          },
          "default": {
            "description": "Unexpected error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/group/{group}/limits": {
      "get": {
        "summary": "Get the resource limits for the given quota-group.",
        "operationId": "groupLimitRead",
        "parameters": [
          {
            "type": "string",
            "description": "The name of the quota-group to add members to.",
            "name": "group",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "The resource limits for the quota-group.",
            "schema": {
              "$ref": "#/definitions/Limits"
            }
          },
          "default": {
            "description": "Unexpected error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "summary": "Set the resource limits for the given quota-group.",
        "operationId": "groupLimitWrite",
        "parameters": [
          {
            "type": "string",
            "description": "The name of the quota-group to add members to.",
            "name": "group",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "The resource limits were successfully set for the quota-group."
          },
          "default": {
            "description": "Unexpected error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/group/{group}/members": {
      "post": {
        "summary": "Add members to the quota-group.",
        "operationId": "groupMembersAdd",
        "parameters": [
          {
            "type": "string",
            "description": "The name of the quota-group to add members to.",
            "name": "group",
            "in": "path",
            "required": true
          },
          {
            "description": "The names of the snaps and member quota-groups to add to the group.",
            "name": "members",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "snaps": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "subGroups": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The members of the group were successfully added."
          },
          "default": {
            "description": "Unexpected error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "summary": "Delete members from the quota-group.",
        "operationId": "groupMembersDelete",
        "parameters": [
          {
            "type": "string",
            "description": "The name of the quota-group whose members are being deleted.",
            "name": "group",
            "in": "path",
            "required": true
          },
          {
            "description": "The names of the snaps and member quota-groups to delete from the group.",
            "name": "members",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "snaps": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "subGroups": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The members of the group were successfully deleted."
          },
          "default": {
            "description": "Unexpected error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Error": {
      "type": "object",
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "code": {
          "type": "integer",
          "x-nullable": false
        },
        "message": {
          "type": "string",
          "x-nullable": false
        }
      }
    },
    "Limits": {
      "properties": {
        "maxMemory": {
          "type": "integer"
        }
      }
    },
    "QuotaGroup": {
      "properties": {
        "limits": {
          "$ref": "#/definitions/Limits"
        },
        "name": {
          "type": "string"
        },
        "snaps": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "subGroups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "api"
    },
    {
      "description": "Endpoints required by the system that are not public facing.",
      "name": "system"
    }
  ]
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    },
    "version": "0.0.1"
  },
  "host": "localhost",
  "basePath": "/api/v0",
  "paths": {
    "/alive": {
      "get": {
        "description": "Any non-200 response means the service is not alive.",
        "tags": [
          "system"
        ],
        "summary": "Used by Caddy or other reverse proxy to determine if the service is alive.",
        "operationId": "alive",
        "responses": {
          "200": {
            "description": "Service is alive."
          }
        }
      }
    },
    "/group/{group}": {
      "post": {
        "summary": "Insert a quota-group.",
        "operationId": "groupInsert",
        "parameters": [
          {
            "type": "string",
            "description": "The name of the group to insert.",
            "name": "group",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "The group was successfully inserted."
          },
          "default": {
            "description": "Unexpected error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a quota-group.",
        "operationId": "groupDelete",
        "parameters": [
          {
            "type": "string",
            "description": "The name of the group to delete.",
            "name": "group",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "The group was successfully deleted."
          },
          "default": {
            "description": "Unexpected error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/group/{group}/limits": {
      "get": {
        "summary": "Get the resource limits for the given quota-group.",
        "operationId": "groupLimitRead",
        "parameters": [
          {
            "type": "string",
            "description": "The name of the quota-group to add members to.",
            "name": "group",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "The resource limits for the quota-group.",
            "schema": {
              "$ref": "#/definitions/Limits"
            }
          },
          "default": {
            "description": "Unexpected error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "summary": "Set the resource limits for the given quota-group.",
        "operationId": "groupLimitWrite",
        "parameters": [
          {
            "type": "string",
            "description": "The name of the quota-group to add members to.",
            "name": "group",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "The resource limits were successfully set for the quota-group."
          },
          "default": {
            "description": "Unexpected error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/group/{group}/members": {
      "post": {
        "summary": "Add members to the quota-group.",
        "operationId": "groupMembersAdd",
        "parameters": [
          {
            "type": "string",
            "description": "The name of the quota-group to add members to.",
            "name": "group",
            "in": "path",
            "required": true
          },
          {
            "description": "The names of the snaps and member quota-groups to add to the group.",
            "name": "members",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "snaps": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "subGroups": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The members of the group were successfully added."
          },
          "default": {
            "description": "Unexpected error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "summary": "Delete members from the quota-group.",
        "operationId": "groupMembersDelete",
        "parameters": [
          {
            "type": "string",
            "description": "The name of the quota-group whose members are being deleted.",
            "name": "group",
            "in": "path",
            "required": true
          },
          {
            "description": "The names of the snaps and member quota-groups to delete from the group.",
            "name": "members",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "snaps": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "subGroups": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The members of the group were successfully deleted."
          },
          "default": {
            "description": "Unexpected error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Error": {
      "type": "object",
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "code": {
          "type": "integer",
          "x-nullable": false
        },
        "message": {
          "type": "string",
          "x-nullable": false
        }
      }
    },
    "Limits": {
      "properties": {
        "maxMemory": {
          "type": "integer"
        }
      }
    },
    "QuotaGroup": {
      "properties": {
        "limits": {
          "$ref": "#/definitions/Limits"
        },
        "name": {
          "type": "string"
        },
        "snaps": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "subGroups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "api"
    },
    {
      "description": "Endpoints required by the system that are not public facing.",
      "name": "system"
    }
  ]
}`))
}
