// Code generated by go-swagger; DO NOT EDIT.

package api

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/MicahParks/qrest/models"
)

// GroupUsageOKCode is the HTTP code returned for type GroupUsageOK
const GroupUsageOKCode int = 200

/*GroupUsageOK The a mapping of quota-group names to usage information.

swagger:response groupUsageOK
*/
type GroupUsageOK struct {

	/*
	  In: Body
	*/
	Payload map[string]models.Usage `json:"body,omitempty"`
}

// NewGroupUsageOK creates GroupUsageOK with default headers values
func NewGroupUsageOK() *GroupUsageOK {

	return &GroupUsageOK{}
}

// WithPayload adds the payload to the group usage o k response
func (o *GroupUsageOK) WithPayload(payload map[string]models.Usage) *GroupUsageOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the group usage o k response
func (o *GroupUsageOK) SetPayload(payload map[string]models.Usage) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GroupUsageOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty map
		payload = make(map[string]models.Usage, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

/*GroupUsageDefault Unexpected error.

swagger:response groupUsageDefault
*/
type GroupUsageDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGroupUsageDefault creates GroupUsageDefault with default headers values
func NewGroupUsageDefault(code int) *GroupUsageDefault {
	if code <= 0 {
		code = 500
	}

	return &GroupUsageDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the group usage default response
func (o *GroupUsageDefault) WithStatusCode(code int) *GroupUsageDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the group usage default response
func (o *GroupUsageDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the group usage default response
func (o *GroupUsageDefault) WithPayload(payload *models.Error) *GroupUsageDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the group usage default response
func (o *GroupUsageDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GroupUsageDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
