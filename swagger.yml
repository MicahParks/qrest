swagger: "2.0"

basePath: "/api/v0"

host: "localhost"

info:
  description: "" # TODO
  license:
    name: "MIT"
    url: "https://opensource.org/licenses/MIT"
  title: "" # TODO
  version: "0.0.1"

tags:
  - description: "" # TODO
    name: "api"
  - description: "Endpoints required by the system that are not public facing."
    name: "system"

schemes:
  - "http"

paths:
  /alive:
    get:
      summary: "Used by Caddy or other reverse proxy to determine if the service is alive."
      description: "Any non-200 response means the service is not alive."
      operationId: "alive"
      responses:
        200:
          description: "Service is alive."
      tags:
        - "system"

  /group/{group}:
    delete:
      summary: "Delete a quota-group."
      description: "" # TODO
      operationId: "groupDelete"
      parameters:
        - description: "The name of the group to delete."
          in: "path"
          name: "group"
          required: true
          type: "string"
      responses:
        200:
          description: "The group was successfully deleted."
        default:
          description: "Unexpected error."
          schema:
            $ref: "#/definitions/Error"
    post:
      summary: "Insert a quota-group."
      description: "" # TODO
      operationId: "groupInsert"
      parameters:
        - description: "The name of the group to insert."
          in: "path"
          name: "group"
          required: true
          type: "string"
      responses:
        200:
          description: "The group was successfully inserted."
        default:
          description: "Unexpected error."
          schema:
            $ref: "#/definitions/Error"

  /group/{group}/members:
    delete:
      summary: "Delete members from the quota-group."
      description: "" # TODO
      operationId: "groupMembersDelete"
      parameters:
        - description: "The name of the quota-group whose members are being deleted."
          in: "path"
          name: "group"
          required: true
          type: "string"
        - description: "The names of the snaps and member quota-groups to delete from the group."
          in: "body"
          name: "members"
          schema:
            type: "object"
            properties:
              snaps:
                type: "array"
                items:
                  type: "string"
              subGroups:
                type: "array"
                items:
                  type: "string"
      responses:
        200:
          description: "The members of the group were successfully deleted."
        default:
          description: "Unexpected error."
          schema:
            $ref: "#/definitions/Error"
    post:
      summary: "Add members to the quota-group."
      description: "" # TODO
      operationId: "groupMembersAdd"
      parameters:
        - description: "The name of the quota-group to add members to."
          in: "path"
          name: "group"
          required: true
          type: "string"
        - description: "The names of the snaps and member quota-groups to add to the group."
          in: "body"
          name: "members"
          schema:
            type: "object"
            properties:
              snaps:
                type: "array"
                items:
                  type: "string"
              subGroups:
                type: "array"
                items:
                  type: "string"
      responses:
        200:
          description: "The members of the group were successfully added."
        default:
          description: "Unexpected error."
          schema:
            $ref: "#/definitions/Error"


  /group/{group}/limits:
    get:
      summary: "Get the resource limits for the given quota-group."
      description: "" # TODO.
      operationId: "groupLimitRead"
      parameters:
        - description: "The name of the quota-group to add members to."
          in: "path"
          name: "group"
          required: true
          type: "string"
      responses:
        200:
          description: "The resource limits for the quota-group."
          schema:
            $ref: "#/definitions/Limits"
        default:
          description: "Unexpected error."
          schema:
            $ref: "#/definitions/Error"
    post: # TODO Update default. Upsert by boolean.
      summary: "Set the resource limits for the given quota-group."
      description: "" # TODO
      operationId: "groupLimitWrite"
      parameters:
        - description: "The name of the quota-group to add members to."
          in: "path"
          name: "group"
          required: true
          type: "string"
      responses:
        200:
          description: "The resource limits were successfully set for the quota-group."
        default:
          description: "Unexpected error."
          schema:
            $ref: "#/definitions/Error"

#  /group/{group}/usage: TODO
#    get:

definitions:

  # Schema for error response body.
  Error:
    properties:
      code:
        type: "integer"
        x-nullable: false
      message:
        type: "string"
        x-nullable: false
    required:
      - "code"
      - "message"
    type: "object"

  # Schema for resource limits.
  Limits:
    properties:
      maxMemory:
        type: "integer"

  QuotaGroup: # TODO Use for groupWrite.
    properties:
      limits:
        $ref: "#/definitions/Limits"
      name:
        type: "string"
      snaps:
        type: "array"
        items:
          type: "string"
      subGroups:
        type: "array"
        items:
          type: "string"
